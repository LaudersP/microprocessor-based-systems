Assignment 1. v.03.


Enter your name in the following fold.
%info
Parker Lauders
%/info


======================================================================
Program 1 (15 points).

Write a program that will copy the 100 bytes that start at "source"
to "destination".

-d 0271 02D4

%uasm65,title=""
	org 0200h
	
main:
    LDX #0d
    
loop:
    LDA source,x
    STA destination,x
    
    INX
    CPX #100d
    BNE loop

source:
	dbt 59d,61d,37d,128d,71d,150d,195d,130d,69d,84d
	dbt 171d,227d,99d,214d,233d,136d,80d,253d,242d
	dbt 112d,221d,151d,101d,117d,76d,226d,174d,205d
	dbt 84d,78d,139d,89d,195d,243d,69d,128d,217d,215d
	dbt 57d,100d,227d,226d,233d,238d,229d,228d,135d
	dbt 140d,98d,211d,245d,120d,206d,198d,47d,191d
	dbt 239d,27d,236d,12d,242d,148d,98d,11d,38d,189d
	dbt 238d,225d,142d,214d,214d,21d,75d,17d,190d
	dbt 178d,123d,125d,123d,10d,166d,123d,135d,220d
	dbt 193d,46d,248d,222d,63d,206d,197d,101d,144d
	dbt 201d,233d,12d,241d,85d,180d,29d
	
destination:
	dbt 100d(0d)

	end

%/uasm65

    %output,mpversion="346",preserve="false"
      *** Executable Code ***
      
      %s19,description="Execute this fold to send program to U6502 monitor.",preserve="false"
      	S00700005541534DC2
      	S1170200A200BD0D029D7102E8E064D0F53B3D25804796C3BA
      	S1170214824554ABE363D6E98850FDF270DD9765754CE2AEA6
      	S1170228CD544E8B59C3F34580D9D73964E3E2E9EEE5E487B7
      	S117023C8C62D3F578CEC62FBFEF1BEC0CF294620B26BDEE34
      	S1170250E18ED6D6154B11BEB27B7D7B0AA67B87DCC12EF8B2
      	S1170264DE3FCEC56590C9E90CF155B41D0000000000000008
      	S117027800000000000000000000000000000000000000006E
      	S117028C00000000000000000000000000000000000000005A
      	S11702A0000000000000000000000000000000000000000046
      	S11702B4000000000000000000000000000000000000000032
      	S11002C80000000000000000000000000025
      	S9030000FC
      %/s19
       
      *** List File ***
      
      0200            000001 |	org 0200h
                      000002 |	
      0200            000003 |main:
      0200 A2 00      000004 |    LDX #0d
                      000005 |    
      0202            000006 |loop:
      0202 BD 0D 02   000007 |    LDA source,x
      0205 9D 71 02   000008 |    STA destination,x
                      000009 |    
      0208 E8         000010 |    INX
      0209 E0 64      000011 |    CPX #100d
      020B D0 F5      000012 |    BNE loop
                      000013 |
      020D            000014 |source:
      020D 3B         000015 |	dbt 59d,61d,37d,128d,71d,150d,195d,130d,69d,84d
      020E 3D               
      020F 25               
      0210 80               
      0211 47               
      0212 96               
      0213 C3               
      0214 82               
      0215 45               
      0216 54               
      0217 AB         000016 |	dbt 171d,227d,99d,214d,233d,136d,80d,253d,242d
      0218 E3               
      0219 63               
      021A D6               
      021B E9               
      021C 88               
      021D 50               
      021E FD               
      021F F2               
      0220 70         000017 |	dbt 112d,221d,151d,101d,117d,76d,226d,174d,205d
      0221 DD               
      0222 97               
      0223 65               
      0224 75               
      0225 4C               
      0226 E2               
      0227 AE               
      0228 CD               
      0229 54         000018 |	dbt 84d,78d,139d,89d,195d,243d,69d,128d,217d,215d
      022A 4E               
      022B 8B               
      022C 59               
      022D C3               
      022E F3               
      022F 45               
      0230 80               
      0231 D9               
      0232 D7               
      0233 39         000019 |	dbt 57d,100d,227d,226d,233d,238d,229d,228d,135d
      0234 64               
      0235 E3               
      0236 E2               
      0237 E9               
      0238 EE               
      0239 E5               
      023A E4               
      023B 87               
      023C 8C         000020 |	dbt 140d,98d,211d,245d,120d,206d,198d,47d,191d
      023D 62               
      023E D3               
      023F F5               
      0240 78               
      0241 CE               
      0242 C6               
      0243 2F               
      0244 BF               
      0245 EF         000021 |	dbt 239d,27d,236d,12d,242d,148d,98d,11d,38d,189d
      0246 1B               
      0247 EC               
      0248 0C               
      0249 F2               
      024A 94               
      024B 62               
      024C 0B               
      024D 26               
      024E BD               
      024F EE         000022 |	dbt 238d,225d,142d,214d,214d,21d,75d,17d,190d
      0250 E1               
      0251 8E               
      0252 D6               
      0253 D6               
      0254 15               
      0255 4B               
      0256 11               
      0257 BE               
      0258 B2         000023 |	dbt 178d,123d,125d,123d,10d,166d,123d,135d,220d
      0259 7B               
      025A 7D               
      025B 7B               
      025C 0A               
      025D A6               
      025E 7B               
      025F 87               
      0260 DC               
      0261 C1         000024 |	dbt 193d,46d,248d,222d,63d,206d,197d,101d,144d
      0262 2E               
      0263 F8               
      0264 DE               
      0265 3F               
      0266 CE               
      0267 C5               
      0268 65               
      0269 90               
      026A C9         000025 |	dbt 201d,233d,12d,241d,85d,180d,29d
      026B E9               
      026C 0C               
      026D F1               
      026E 55               
      026F B4               
      0270 1D               
                      000026 |	
      0271            000027 |destination:
      0271 00         000028 |	dbt 100d(0d)
      0272 00 00 00         
      0275 00 00 00         
      0278 00 00 00         
      027B 00 00 00         
      027E 00 00 00         
      0281 00 00 00         
      0284 00 00 00         
      0287 00 00 00         
      028A 00 00 00         
      028D 00 00 00         
      0290 00 00 00         
      0293 00 00 00         
      0296 00 00 00         
      0299 00 00 00         
      029C 00 00 00         
      029F 00 00 00         
      02A2 00 00 00         
      02A5 00 00 00         
      02A8 00 00 00         
      02AB 00 00 00         
      02AE 00 00 00         
      02B1 00 00 00         
      02B4 00 00 00         
      02B7 00 00 00         
      02BA 00 00 00         
      02BD 00 00 00         
      02C0 00 00 00         
      02C3 00 00 00         
      02C6 00 00 00         
      02C9 00 00 00         
      02CC 00 00 00         
      02CF 00 00 00         
      02D2 00 00 00         
                      000029 |
                      000030 |	end
      
      *** Symbol Table ***
      {MAIN=512, SOURCE=525, LOOP=514, DESTINATION=625, =0}
.   %/output




======================================================================
Program 2 (15 points).

Write a program that will capitalize all the letters in the string 
that starts at "string1".

-d 0217 0296

%uasm65,title=""
    org 0200h

main:
    LDX #0d
    
loop:
    LDA string1,x
    
    CMP #61h
    BCC store
    CMP #7Ah
    BCS store
    
    SBC #33d
    
store:
    STA string1,x
    INX
    
    CMP #0d
    BNE loop


string1:
	dbt "A bird in the hand is worth two in the bush. Early to bed and "
	dbt "early to rise makes a person healthy, wealthy, and wise."
	dbt 0d
	
	end
%/uasm65

    %output,mpversion="346",preserve="false"
      *** Executable Code ***
      
      %s19,description="Execute this fold to send program to U6502 monitor.",preserve="false"
      	S00700005541534DC2
      	S1170200A200BD1702C9619006C97AB002E9219D1702E8C948
      	S117021400D0EB41206269726420696E207468652068616E66
      	S11702286420697320776F7274682074776F20696E2074689D
      	S117023C6520627573682E204561726C7920746F20626564DA
      	S117025020616E64206561726C7920746F2072697365206DA3
      	S1170264616B6573206120706572736F6E206865616C746810
      	S1170278792C7765616C7468792C616E6420776973652E0066
      	S103028C6E
      	S9030000FC
      %/s19
       
      *** List File ***
      
      0200            000001 |    org 0200h
                      000002 |
      0200            000003 |main:
      0200 A2 00      000004 |    LDX #0d
                      000005 |    
      0202            000006 |loop:
      0202 BD 17 02   000007 |    LDA string1,x
                      000008 |    
      0205 C9 61      000009 |    CMP #61h
      0207 90 06      000010 |    BCC store
      0209 C9 7A      000011 |    CMP #7Ah
      020B B0 02      000012 |    BCS store
                      000013 |    
      020D E9 21      000014 |    SBC #33d
                      000015 |    
      020F            000016 |store:
      020F 9D 17 02   000017 |    STA string1,x
      0212 E8         000018 |    INX
                      000019 |    
      0213 C9 00      000020 |    CMP #0d
      0215 D0 EB      000021 |    BNE loop
                      000022 |
                      000023 |
      0217            000024 |string1:
      0217 41         000025 |	dbt "A bird in the hand is worth two in the bush. Early to bed and "
      0218 20 62 69         
      021B 72 64 20         
      021E 69 6E 20         
      0221 74 68 65         
      0224 20 68 61         
      0227 6E 64 20         
      022A 69 73 20         
      022D 77 6F 72         
      0230 74 68 20         
      0233 74 77 6F         
      0236 20 69 6E         
      0239 20 74 68         
      023C 65 20 62         
      023F 75 73 68         
      0242 2E 20 45         
      0245 61 72 6C         
      0248 79 20 74         
      024B 6F 20 62         
      024E 65 64 20         
      0251 61 6E 64         
      0254 20               
      0255 65         000026 |	dbt "early to rise makes a person healthy,wealthy,and wise."
      0256 61 72 6C         
      0259 79 20 74         
      025C 6F 20 72         
      025F 69 73 65         
      0262 20 6D 61         
      0265 6B 65 73         
      0268 20 61 20         
      026B 70 65 72         
      026E 73 6F 6E         
      0271 20 68 65         
      0274 61 6C 74         
      0277 68 79 2C         
      027A 77 65 61         
      027D 6C 74 68         
      0280 79 2C 61         
      0283 6E 64 20         
      0286 77 69 73         
      0289 65 2E            
      028B 00         000027 |	dbt 0d
                      000028 |	
                      000029 |	end
      
      *** Symbol Table ***
      {STORE=527, MAIN=512, LOOP=514, STRING1=535, =0}
.   %/output




======================================================================
Program 3 (15 points).

Write a program that exchanges the upper and lower nibbles in the 
100 bytes that begin at "numbers".

-d 0215 0278

Issue: The bytes are not looped back (from the MSB to the LSB).
1F -> F0
4D -> D2
38 -> 81
4C -> C2
23 -> 31

%uasm65,title=""
	org 0200h

	LDX #0d
	
Loop:
    ; Load number
	LDA numbers,X
	PHA
	
	; Get upper nibble
	LSR A
	LSR A
	LSR A
	LSR A
	
	; Store temp
	STA temp
	
	; Get lower nibble
	PLA
	AND #0Fh
	ASL A
	ASL A
	ASL A
	ASL A
	
	; Combine nibbles
	ORA temp
	
	; Store
	STA numbers,X
	
	; Increase and check if all numbers were flipped
	INX
	CPX #100d
	BNE Loop
	
	RTS
	

numbers:
	dbt 1Fh,4Dh,38h,4Ch,23h,D9h,FCh,36h,CFh,17h,35h,70h
	dbt 8Fh,9Eh,20h,9Bh,27h,2Ch,7Bh,30h,E4h,7Ch,9Bh,89h
	dbt EAh,78h,A0h,52h,28h,D5h,DCh,69h,88h,75h,80h,7Dh
	dbt D7h,55h,9Dh,BCh,12h,D2h,7Fh,DEh,92h,11h,8Ah,E6h
	dbt AFh,5Eh,89h,D4h,92h,5Ah,A2h,B8h,BBh,B6h,D8h,54h
	dbt DBh,5Dh,58h,B9h,7Eh,CDh,72h,19h,2Ch,7Ch,77h,30h
	dbt 7Ch,19h,6Eh,89h,B5h,66h,C2h,EFh,89h,96h,F3h,63h
	dbt 82h,F0h,56h,DCh,9Ah,7Eh,FCh,29h,B4h,B3h,CDh,3Dh
	dbt 58h,BEh,DCh,44h
	
temp:
    dbt 0d

	end

%/uasm65

    %output,mpversion="346",preserve="false"
      *** Executable Code ***
      
      %s19,description="Execute this fold to send program to U6502 monitor.",preserve="false"
      	S00700005541534DC2
      	S1170200A200BD2002484A4A4A4A8D840268290F0A0A0A0A1A
      	S11702140D84029D2002E8E064D0E3601F4D384C23D9FC3623
      	S1170228CF1735708F9E209B272C7B30E47C9B89EA78A05275
      	S117023C28D5DC698875807DD7559DBC12D27FDE92118AE695
      	S1170250AF5E89D4925AA2B8BBB6D854DB5D58B97ECD72192A
      	S11702642C7C77307C196E89B566C2EF8996F36382F056DCC2
      	S11002789A7EFC29B4B3CD3D58BEDC440091
      	S9030000FC
      %/s19
        
      *** List File ***
      
      0200            000001 |	org 0200h
                      000002 |
      0200 A2 00      000003 |	LDX #0d
                      000004 |	
      0202            000005 |Loop:
      0202 BD 20 02   000006 |	LDA numbers,X
      0205 48         000007 |	PHA
                      000008 |	
      0206 4A         000009 |	LSR A
      0207 4A         000010 |	LSR A
      0208 4A         000011 |	LSR A
      0209 4A         000012 |	LSR A
      020A 8D 84 02   000013 |	STA temp
                      000014 |	
      020D 68         000015 |	PLA
      020E 29 0F      000016 |	AND #0Fh
      0210 0A         000017 |	ASL A
      0211 0A         000018 |	ASL A
      0212 0A         000019 |	ASL A
      0213 0A         000020 |	ASL A
      0214 0D 84 02   000021 |	ORA temp
                      000022 |	
      0217 9D 20 02   000023 |	STA numbers,X
                      000024 |	
      021A E8         000025 |	INX
      021B E0 64      000026 |	CPX #100d
      021D D0 E3      000027 |	BNE Loop
                      000028 |	
      021F 60         000029 |	RTS
                      000030 |	
                      000031 |
      0220            000032 |numbers:
      0220 1F         000033 |	dbt 1Fh,4Dh,38h,4Ch,23h,D9h,FCh,36h,CFh,17h,35h,70h
      0221 4D               
      0222 38               
      0223 4C               
      0224 23               
      0225 D9               
      0226 FC               
      0227 36               
      0228 CF               
      0229 17               
      022A 35               
      022B 70               
      022C 8F         000034 |	dbt 8Fh,9Eh,20h,9Bh,27h,2Ch,7Bh,30h,E4h,7Ch,9Bh,89h
      022D 9E               
      022E 20               
      022F 9B               
      0230 27               
      0231 2C               
      0232 7B               
      0233 30               
      0234 E4               
      0235 7C               
      0236 9B               
      0237 89               
      0238 EA         000035 |	dbt EAh,78h,A0h,52h,28h,D5h,DCh,69h,88h,75h,80h,7Dh
      0239 78               
      023A A0               
      023B 52               
      023C 28               
      023D D5               
      023E DC               
      023F 69               
      0240 88               
      0241 75               
      0242 80               
      0243 7D               
      0244 D7         000036 |	dbt D7h,55h,9Dh,BCh,12h,D2h,7Fh,DEh,92h,11h,8Ah,E6h
      0245 55               
      0246 9D               
      0247 BC               
      0248 12               
      0249 D2               
      024A 7F               
      024B DE               
      024C 92               
      024D 11               
      024E 8A               
      024F E6               
      0250 AF         000037 |	dbt AFh,5Eh,89h,D4h,92h,5Ah,A2h,B8h,BBh,B6h,D8h,54h
      0251 5E               
      0252 89               
      0253 D4               
      0254 92               
      0255 5A               
      0256 A2               
      0257 B8               
      0258 BB               
      0259 B6               
      025A D8               
      025B 54               
      025C DB         000038 |	dbt DBh,5Dh,58h,B9h,7Eh,CDh,72h,19h,2Ch,7Ch,77h,30h
      025D 5D               
      025E 58               
      025F B9               
      0260 7E               
      0261 CD               
      0262 72               
      0263 19               
      0264 2C               
      0265 7C               
      0266 77               
      0267 30               
      0268 7C         000039 |	dbt 7Ch,19h,6Eh,89h,B5h,66h,C2h,EFh,89h,96h,F3h,63h
      0269 19               
      026A 6E               
      026B 89               
      026C B5               
      026D 66               
      026E C2               
      026F EF               
      0270 89               
      0271 96               
      0272 F3               
      0273 63               
      0274 82         000040 |	dbt 82h,F0h,56h,DCh,9Ah,7Eh,FCh,29h,B4h,B3h,CDh,3Dh
      0275 F0               
      0276 56               
      0277 DC               
      0278 9A               
      0279 7E               
      027A FC               
      027B 29               
      027C B4               
      027D B3               
      027E CD               
      027F 3D               
      0280 58         000041 |	dbt 58h,BEh,DCh,44h
      0281 BE               
      0282 DC               
      0283 44               
                      000042 |	
      0284            000043 |temp:
      0284 00         000044 |    dbt 0d
                      000045 |
                      000046 |	end
      
      *** Symbol Table ***
      {LOOP=514, TEMP=644, NUMBERS=544, =0}
.   %/output




======================================================================
Program 4 (15 points).

Write a program that contains a subroutine that prints the string
"A stitch in time saves nine." Have the main program call the subroutine
3 times.


%uasm65,title=""
PrntMess: equ E00Ch ;Print a message to the user.

	org 0200h

main:
    JSR Subroutine
    JSR Subroutine
    JSR Subroutine
    
    brk


Subroutine:
    PHA
    TXA
    PHA
    TYA
    PHA
    
    LDX #string<
    LDY #string>
    JSR PrntMess
    
    PLA
    TAY
    PLA
    TAX
    PLA
    
    RTS

string:
    dbt 0ah,0dh
    dbt "A stitch in time saves nine."
    dbt 0d

	end

%/uasm65

    %output,mpversion="346",preserve="false"
      *** Executable Code ***
      
      %s19,description="Execute this fold to send program to U6502 monitor.",preserve="false"
      	S00700005541534DC2
      	S1170200200A02200A02200A0200488A489848A21CA00220E8
      	S11702140CE068A868AA68600A0D412073746974636820696C
      	S11702286E2074696D65207361766573206E696E652E000047
      	S9030000FC
      %/s19
       
      *** List File ***
      
      0000            000001 |PrntMess: equ E00Ch ;Print a message to the user.
                      000002 |
      0200            000003 |	org 0200h
                      000004 |
      0200            000005 |main:
      0200 20 0A 02   000006 |    JSR Subroutine
      0203 20 0A 02   000007 |    JSR Subroutine
      0206 20 0A 02   000008 |    JSR Subroutine
                      000009 |    
      0209 00         000010 |    brk
                      000011 |
                      000012 |
      020A            000013 |Subroutine:
      020A 48         000014 |    PHA
      020B 8A         000015 |    TXA
      020C 48         000016 |    PHA
      020D 98         000017 |    TYA
      020E 48         000018 |    PHA
                      000019 |    
      020F A2 1C      000020 |    LDX #string<
      0211 A0 02      000021 |    LDY #string>
      0213 20 0C E0   000022 |    JSR PrntMess
                      000023 |    
      0216 68         000024 |    PLA
      0217 A8         000025 |    TAY
      0218 68         000026 |    PLA
      0219 AA         000027 |    TAX
      021A 68         000028 |    PLA
                      000029 |    
      021B 60         000030 |    RTS
                      000031 |
      021C            000032 |string:
      021C 0A         000033 |    dbt 0ah,0dh
      021D 0D               
      021E 41         000034 |    dbt "A stitch in time saves nine."
      021F 20 73 74         
      0222 69 74 63         
      0225 68 20 69         
      0228 6E 20 74         
      022B 69 6D 65         
      022E 20 73 61         
      0231 76 65 73         
      0234 20 6E 69         
      0237 6E 65 2E         
      023A 00         000035 |    dbt 0d
                      000036 |
                      000037 |	end
      
      *** Symbol Table ***
      {STRING=540, SUBROUTINE=522, MAIN=512, PRNTMESS=57356, =0}
.   %/output




======================================================================
Program 5 (15 points).

Write a program that will sort the 100 integers starting at "numbers"
into ascending order.

-d 0235 0299

%uasm65,title=""
	org 0200h

main:
    LDX #0d
    
outerLoop:
    LDY #0d
    
innerLoop:
    ; Load the current element
    LDA numbers,Y
    
    ; Store temporarily
    STA temp
    
    ; Increment Y
    INY
    
    ; Load the next element
    LDA numbers,Y
    
    ; Compare it with the temp (previous element)
    CMP temp
    
    ; If next element >= temp, no need to swap
    BCS continue
    
    ; Swap needed
    STA temp2
    LDA temp
    STA numbers,Y
    LDA temp2
    DEY
    STA numbers,Y
    INY
    JMP nextStep
    
continue:
    DEY
    
nextStep:
    INY
    CPY #100d
    BNE innerLoop
    
    INX
    CPX #99d
    BNE outerLoop
    
    BRK
    
temp:
    dbt 0d
    
temp2:
    dbt 0d    

numbers:
	dbt 59d,61d,37d,128d,71d,150d,195d,130d,69d,84d
	dbt 171d,227d,99d,214d,233d,136d,80d,253d,242d
	dbt 112d,221d,151d,101d,117d,76d,226d,174d,205d
	dbt 84d,78d,139d,89d,195d,243d,69d,128d,217d,215d
	dbt 57d,100d,227d,226d,233d,238d,229d,228d,135d
	dbt 140d,98d,211d,245d,120d,206d,198d,47d,191d
	dbt 239d,27d,236d,12d,242d,148d,98d,11d,38d,189d
	dbt 238d,225d,142d,214d,214d,21d,75d,17d,190d
	dbt 178d,123d,125d,123d,10d,166d,123d,135d,220d
	dbt 193d,46d,248d,222d,63d,206d,197d,101d,144d
	dbt 201d,233d,12d,241d,85d,180d,29d

	end

%/uasm65

    %output,mpversion="346",preserve="false"
      *** Executable Code ***
      
      %s19,description="Execute this fold to send program to U6502 monitor.",preserve="false"
      	S00700005541534DC2
      	S1170200A200A000B935028D3302C8B93502CD3302B0148DE7
      	S11702143402AD3302993502AD340288993502C84C280288E9
      	S1170228C8C064D0D7E8E063D0D00000003B3D25804796C3A3
      	S117023C824554ABE363D6E98850FDF270DD9765754CE2AE7E
      	S1170250CD544E8B59C3F34580D9D73964E3E2E9EEE5E4878F
      	S11702648C62D3F578CEC62FBFEF1BEC0CF294620B26BDEE0C
      	S1170278E18ED6D6154B11BEB27B7D7B0AA67B87DCC12EF88A
      	S110028CDE3FCEC56590C9E90CF155B41DE7
      	S9030000FC
      %/s19
       
      *** List File ***
      
      0200            000001 |	org 0200h
                      000002 |
      0200            000003 |main:
      0200 A2 00      000004 |    LDX #0d
                      000005 |    
      0202            000006 |outerLoop:
      0202 A0 00      000007 |    LDY #0d
                      000008 |    
      0204            000009 |innerLoop:
                      000010 |    ; Load the current element
      0204 B9 35 02   000011 |    LDA numbers,Y
                      000012 |    
                      000013 |    ; Store temporarily
      0207 8D 33 02   000014 |    STA temp
                      000015 |    
                      000016 |    ; Increment Y
      020A C8         000017 |    INY
                      000018 |    
                      000019 |    ; Load the next element
      020B B9 35 02   000020 |    LDA numbers,Y
                      000021 |    
                      000022 |    ; Compare it with the temp (previous element)
      020E CD 33 02   000023 |    CMP temp
                      000024 |    
                      000025 |    ; If next element >= temp,no need to swap
      0211 B0 14      000026 |    BCS continue
                      000027 |    
                      000028 |    ; Swap needed
      0213 8D 34 02   000029 |    STA temp2
      0216 AD 33 02   000030 |    LDA temp
      0219 99 35 02   000031 |    STA numbers,Y
      021C AD 34 02   000032 |    LDA temp2
      021F 88         000033 |    DEY
      0220 99 35 02   000034 |    STA numbers,Y
      0223 C8         000035 |    INY
      0224 4C 28 02   000036 |    JMP nextStep
                      000037 |    
      0227            000038 |continue:
      0227 88         000039 |    DEY
                      000040 |    
      0228            000041 |nextStep:
      0228 C8         000042 |    INY
      0229 C0 64      000043 |    CPY #100d
      022B D0 D7      000044 |    BNE innerLoop
                      000045 |    
      022D E8         000046 |    INX
      022E E0 63      000047 |    CPX #99d
      0230 D0 D0      000048 |    BNE outerLoop
                      000049 |    
      0232 00         000050 |    BRK
                      000051 |    
      0233            000052 |temp:
      0233 00         000053 |    dbt 0d
                      000054 |    
      0234            000055 |temp2:
      0234 00         000056 |    dbt 0d    
                      000057 |
      0235            000058 |numbers:
      0235 3B         000059 |	dbt 59d,61d,37d,128d,71d,150d,195d,130d,69d,84d
      0236 3D               
      0237 25               
      0238 80               
      0239 47               
      023A 96               
      023B C3               
      023C 82               
      023D 45               
      023E 54               
      023F AB         000060 |	dbt 171d,227d,99d,214d,233d,136d,80d,253d,242d
      0240 E3               
      0241 63               
      0242 D6               
      0243 E9               
      0244 88               
      0245 50               
      0246 FD               
      0247 F2               
      0248 70         000061 |	dbt 112d,221d,151d,101d,117d,76d,226d,174d,205d
      0249 DD               
      024A 97               
      024B 65               
      024C 75               
      024D 4C               
      024E E2               
      024F AE               
      0250 CD               
      0251 54         000062 |	dbt 84d,78d,139d,89d,195d,243d,69d,128d,217d,215d
      0252 4E               
      0253 8B               
      0254 59               
      0255 C3               
      0256 F3               
      0257 45               
      0258 80               
      0259 D9               
      025A D7               
      025B 39         000063 |	dbt 57d,100d,227d,226d,233d,238d,229d,228d,135d
      025C 64               
      025D E3               
      025E E2               
      025F E9               
      0260 EE               
      0261 E5               
      0262 E4               
      0263 87               
      0264 8C         000064 |	dbt 140d,98d,211d,245d,120d,206d,198d,47d,191d
      0265 62               
      0266 D3               
      0267 F5               
      0268 78               
      0269 CE               
      026A C6               
      026B 2F               
      026C BF               
      026D EF         000065 |	dbt 239d,27d,236d,12d,242d,148d,98d,11d,38d,189d
      026E 1B               
      026F EC               
      0270 0C               
      0271 F2               
      0272 94               
      0273 62               
      0274 0B               
      0275 26               
      0276 BD               
      0277 EE         000066 |	dbt 238d,225d,142d,214d,214d,21d,75d,17d,190d
      0278 E1               
      0279 8E               
      027A D6               
      027B D6               
      027C 15               
      027D 4B               
      027E 11               
      027F BE               
      0280 B2         000067 |	dbt 178d,123d,125d,123d,10d,166d,123d,135d,220d
      0281 7B               
      0282 7D               
      0283 7B               
      0284 0A               
      0285 A6               
      0286 7B               
      0287 87               
      0288 DC               
      0289 C1         000068 |	dbt 193d,46d,248d,222d,63d,206d,197d,101d,144d
      028A 2E               
      028B F8               
      028C DE               
      028D 3F               
      028E CE               
      028F C5               
      0290 65               
      0291 90               
      0292 C9         000069 |	dbt 201d,233d,12d,241d,85d,180d,29d
      0293 E9               
      0294 0C               
      0295 F1               
      0296 55               
      0297 B4               
      0298 1D               
                      000070 |
                      000071 |	end
      
      *** Symbol Table ***
      {MAIN=512, NUMBERS=565, NEXTSTEP=552, INNERLOOP=516, TEMP2=564, TEMP=563, CONTINUE=551, OUTERLOOP=514, =0}
.   %/output



======================================================================
Program 6 (25 points).

Write a program that enables the user to use some of the switches that
are at memory location A600 to move a single light around the 8x2 grid
of LEDs that are formed by memory locations A200h and A400h.

%uasm65,title=""
    org 200h
    
    LDA #00000001b
    STA LED
    
Loop:
    JSR display
    JSR left
    JSR right
    JSR up
    JSR down
    
    JMP Loop
    
left:
    PHA
    TXA
    PHA
    TYA
    PHA
    
    ; Check if left move is wanted
    LDA 0a600h
    CMP #00001000b
    BNE endLeft
    
    ; Check if LED is leftmost
    LDA LED
    CMP #10000000b
    BEQ endLeft
    
    ; Move LED
    ASL LED
    JSR delay
    
endLeft:
    PLA
    TAY
    PLA
    TAX
    PLA
    
    rts
    
delay:
    ; Save reg
    PHA
    TXA
    PHA
    TYA
    PHA
    
    LDA #0fh
    
OutLoop:
    LDX #030h
    
InLoop1:
    LDY #0FFh
    
InLoop2:
    DEY
    BEQ InLoop2
    
    DEX
    BNE InLoop1
    
    SEC
    SBC #1d
    BNE OutLoop
    
; Restore registers
    PLA
    TAY
    PLA
    TAX
    PLA
    RTS
    
right:
    PHA
    TXA
    PHA
    TYA
    PHA
    
    ; Check if right move is wanted
    LDA 0a600h
    CMP #00000100b
    BNE endRight
    
    ; Check if LED is rightmost
    LDA LED
    CMP #00000001b
    BEQ endRight
    
    ; Move LED
    LSR LED
    JSR delay
    
endRight:
    PLA
    TAY
    PLA
    TAX
    PLA
    
    rts
    
up:
    PHA
    TXA
    PHA
    TYA
    PHA
    
    ; Check if up move is wanted
    LDA 0a600h
    CMP #00000010b
    BNE endUp
    
    ; Change its layer
    LDA #0d
    STA LEVEL

endUp:
    PLA
    TAY
    PLA
    TAX
    PLA
    
    rts
    
down:
    PHA
    TXA
    PHA
    TYA
    PHA
    
    ; Check if down move is wanted
    LDA 0a600h
    CMP #00000001b
    BNE endDown
    
    ; Change its layer
    LDA #1d
    STA LEVEL

endDown:
    PLA
    TAY
    PLA
    TAX
    PLA
    
    rts
    
display:
    PHA
    TXA
    PHA
    TYA
    PHA
    
    ; Check for top level
    LDA LEVEL
    CMP #0d
    BEQ displayTop
    
    ; Check for bottom level
    LDA LEVEL
    CMP #1d
    BEQ displayBottom
    
    JMP displayEnd
    
displayTop:
    LDA LED
    STA 0a200h
    LDA #0d
    STA 0a400h
    JMP displayEnd
    
displayBottom:
    LDA LED
    STA 0a400h
    LDA #0d
    STA 0a200h
    JMP displayEnd
    
displayEnd:
    PLA
    TAY
    PLA
    TAX
    PLA
    
    RTS
    
LED:
    dbt 0d
    
LEVEL:
    dbt 0d
    
    end
%/uasm65

    %output,mpversion="346",preserve="false"
      *** Executable Code ***
      
      %s19,description="Execute this fold to send program to U6502 monitor.",preserve="false"
      	S00700005541534DC2
      	S1170200A9018D6B028D00A2201702203302AD6B028D00A23C
      	S11702144C0802488A489848AD00A6C908D00AAD6B02C98021
      	S1170228F0030E6B0268A868AA6860488A489848AD00A6C950
      	S117023C08D0EEAD6B02C901F0E74E6B0268A868AA6860483C
      	S11702508A489848A90FA2FFA0FF88F0FDCAD0F838E901D0F3
      	S10C0264F168A868AA68600000B2
      	S9030000FC
      %/s19
       
      *** List File ***
      
      0200            000001 |	org 0200h
                      000002 |	
      0200 A9 01      000003 |	LDA #00000001b
      0202 8D 6B 02   000004 |	STA LED
      0205 8D 00 A2   000005 |	STA 0a200h
                      000006 |	
      0208            000007 |Loop:
      0208 20 17 02   000008 |    JSR moveLeft
      020B 20 33 02   000009 |    JSR moveRight
                      000010 |    
      020E AD 6B 02   000011 |    LDA LED
      0211 8D 00 A2   000012 |    STA 0a200h
                      000013 |
      0214 4C 08 02   000014 |    JMP Loop
                      000015 |
      0217            000016 |moveLeft:
      0217 48         000017 |    PHA
      0218 8A         000018 |    TXA
      0219 48         000019 |    PHA
      021A 98         000020 |    TYA
      021B 48         000021 |    PHA
                      000022 |    
                      000023 |    ; Check if left move is wanted
      021C AD 00 A6   000024 |    LDA 0a600h
      021F C9 08      000025 |    CMP #00001000b
      0221 D0 0A      000026 |    BNE skipMoveLeft
                      000027 |    
                      000028 |    ; Check if the LED is maxed
      0223 AD 6B 02   000029 |    LDA LED
      0226 C9 80      000030 |    CMP #10000000b
      0228 F0 03      000031 |    BEQ skipMoveLeft
                      000032 |    
                      000033 |    ; Move the LED
      022A 0E 6B 02   000034 |    ASL LED
                      000035 |    
      022D            000036 |skipMoveLeft:    
      022D 68         000037 |    PLA
      022E A8         000038 |    TAY
      022F 68         000039 |    PLA
      0230 AA         000040 |    TAX
      0231 68         000041 |    PLA
                      000042 |    
      0232 60         000043 |    RTS
                      000044 |    
      0233            000045 |moveRight:
      0233 48         000046 |    PHA
      0234 8A         000047 |    TXA
      0235 48         000048 |    PHA
      0236 98         000049 |    TYA
      0237 48         000050 |    PHA
                      000051 |    
                      000052 |    ; Check if right move is wanted
      0238 AD 00 A6   000053 |    LDA 0a600h
      023B C9 08      000054 |    CMP #00001000b
      023D D0 EE      000055 |    BNE skipMoveLeft
                      000056 |    
                      000057 |    ; Check if the LED is maxed
      023F AD 6B 02   000058 |    LDA LED
      0242 C9 01      000059 |    CMP #00000001b
      0244 F0 E7      000060 |    BEQ skipMoveLeft
                      000061 |    
                      000062 |    ; Move the LED
      0246 4E 6B 02   000063 |    LSR LED
                      000064 |    
      0249            000065 |skipMoveRight:    
      0249 68         000066 |    PLA
      024A A8         000067 |    TAY
      024B 68         000068 |    PLA
      024C AA         000069 |    TAX
      024D 68         000070 |    PLA
                      000071 |    
      024E 60         000072 |    RTS
                      000073 |
                      000074 |    
      024F            000075 |delay:
                      000076 |    ; Save reg
      024F 48         000077 |    PHA
      0250 8A         000078 |    TXA
      0251 48         000079 |    PHA
      0252 98         000080 |    TYA
      0253 48         000081 |    PHA
                      000082 |    
      0254 A9 0F      000083 |    LDA #0fh
                      000084 |    
      0256            000085 |OutLoop:
      0256 A2 FF      000086 |    LDX #0FFh
                      000087 |    
      0258            000088 |InLoop1:
      0258 A0 FF      000089 |    LDY #0FFh
                      000090 |    
      025A            000091 |InLoop2:
      025A 88         000092 |    DEY
      025B F0 FD      000093 |    BEQ InLoop2
                      000094 |    
      025D CA         000095 |    DEX
      025E D0 F8      000096 |    BNE InLoop1
                      000097 |    
      0260 38         000098 |    SEC
      0261 E9 01      000099 |    SBC #1d
      0263 D0 F1      000100 |    BNE OutLoop
                      000101 |    
                      000102 |; Restore registers
      0265 68         000103 |    PLA
      0266 A8         000104 |    TAY
      0267 68         000105 |    PLA
      0268 AA         000106 |    TAX
      0269 68         000107 |    PLA
      026A 60         000108 |    RTS
                      000109 |
      026B            000110 |LED:
      026B 00         000111 |    dbt 0d
                      000112 |    
      026C            000113 |LAYER:
      026C 00         000114 |    dbt 0d
                      000115 |    
                      000116 |	end
      
      *** Symbol Table ***
      {DELAY=591, LAYER=620, SKIPMOVERIGHT=585, MOVERIGHT=563, LOOP=520, INLOOP2=602, LED=619, INLOOP1=600, MOVELEFT=535, OUTLOOP=598, =0, SKIPMOVELEFT=557}
.   %/output