%group,name="Problem 1",description="Bit across"
========================================================================================================
Problem 1

Write a program that will turn each LED on at a time 
in order to make sure the circuit is assembled correctly.

%uasm65,title=""
    org 0200h
	
main:
    LDA  #00000001b
    STA 0A200h
    
    JSR Delay
    JSR Delay
    JSR Delay
    JSR Delay
    JSR Delay
    
    
    LDA  #00000010b
    STA 0A200h
    
    JSR Delay
    JSR Delay
    JSR Delay
    JSR Delay
    JSR Delay
    
    
    LDA  #00000100b
    STA 0A200h
    
    JSR Delay
    JSR Delay
    JSR Delay
    JSR Delay
    JSR Delay
    
    
    LDA  #00001000b
    STA 0A200h
    
    JSR Delay
    JSR Delay
    JSR Delay
    JSR Delay
    JSR Delay
    
    
    LDA  #00010000b
    STA 0A200h
    
    JSR Delay
    JSR Delay
    JSR Delay
    JSR Delay
    JSR Delay
    
    
    LDA  #00100000b
    STA 0A200h
    
    JSR Delay
    JSR Delay
    JSR Delay
    JSR Delay
    JSR Delay
    
    
    LDA  #01000000b
    STA 0A200h
    
    JSR Delay
    JSR Delay
    JSR Delay
    JSR Delay
    JSR Delay
    
    
    LDA  #10000000b
    STA 0A200h
    
    JSR Delay
    JSR Delay
    JSR Delay
    JSR Delay
    JSR Delay
    
    JMP main
    
Delay:
	pha
	txa
	pha
	tya
	pha
	
	lda #0FFh
	
OutLoop:
	ldx #0FFh

InLoop1:
	ldy #0FFh

InLoop2:
	dey
	beq InLoop2

	dex
	bne InLoop1

	sec
	sbc #1d
	bne OutLoop
	
;Restore registers from the stack.
	pla
	tay
	pla
	tax
	pla

	rts

	end
%/uasm65

    %output,mpversion="346",preserve="false"
      *** Executable Code ***
      
      %s19,description="Execute this fold to send program to U6502 monitor.",preserve="false"
      	S00700005541534DC2
      	S1170200A9018D00A220A30220A30220A30220A30220A30234
      	S1170214A9028D00A220A30220A30220A30220A30220A3021F
      	S1170228A9048D00A220A30220A30220A30220A30220A30209
      	S117023CA9088D00A220A30220A30220A30220A30220A302F1
      	S1170250A9108D00A220A30220A30220A30220A30220A302D5
      	S1170264A9208D00A220A30220A30220A30220A30220A302B1
      	S1170278A9408D00A220A30220A30220A30220A30220A3027D
      	S117028CA9808D00A220A30220A30220A30220A30220A30229
      	S11702A04C0002488A489848A9FFA2FFA0FF88F0FDCAD0F80F
      	S10E02B438E901D0F168A868AA68606E
      	S9030000FC
      %/s19
      
      *** List File ***
      
      0200            000001 |    org 0200h
                      000002 |	
      0200            000003 |main:
      0200 A9 01      000004 |    LDA  #00000001b
      0202 8D 00 A2   000005 |    STA 0A200h
                      000006 |    
      0205 20 A3 02   000007 |    JSR Delay
      0208 20 A3 02   000008 |    JSR Delay
      020B 20 A3 02   000009 |    JSR Delay
      020E 20 A3 02   000010 |    JSR Delay
      0211 20 A3 02   000011 |    JSR Delay
                      000012 |    
                      000013 |    
      0214 A9 02      000014 |    LDA  #00000010b
      0216 8D 00 A2   000015 |    STA 0A200h
                      000016 |    
      0219 20 A3 02   000017 |    JSR Delay
      021C 20 A3 02   000018 |    JSR Delay
      021F 20 A3 02   000019 |    JSR Delay
      0222 20 A3 02   000020 |    JSR Delay
      0225 20 A3 02   000021 |    JSR Delay
                      000022 |    
                      000023 |    
      0228 A9 04      000024 |    LDA  #00000100b
      022A 8D 00 A2   000025 |    STA 0A200h
                      000026 |    
      022D 20 A3 02   000027 |    JSR Delay
      0230 20 A3 02   000028 |    JSR Delay
      0233 20 A3 02   000029 |    JSR Delay
      0236 20 A3 02   000030 |    JSR Delay
      0239 20 A3 02   000031 |    JSR Delay
                      000032 |    
                      000033 |    
      023C A9 08      000034 |    LDA  #00001000b
      023E 8D 00 A2   000035 |    STA 0A200h
                      000036 |    
      0241 20 A3 02   000037 |    JSR Delay
      0244 20 A3 02   000038 |    JSR Delay
      0247 20 A3 02   000039 |    JSR Delay
      024A 20 A3 02   000040 |    JSR Delay
      024D 20 A3 02   000041 |    JSR Delay
                      000042 |    
                      000043 |    
      0250 A9 10      000044 |    LDA  #00010000b
      0252 8D 00 A2   000045 |    STA 0A200h
                      000046 |    
      0255 20 A3 02   000047 |    JSR Delay
      0258 20 A3 02   000048 |    JSR Delay
      025B 20 A3 02   000049 |    JSR Delay
      025E 20 A3 02   000050 |    JSR Delay
      0261 20 A3 02   000051 |    JSR Delay
                      000052 |    
                      000053 |    
      0264 A9 20      000054 |    LDA  #00100000b
      0266 8D 00 A2   000055 |    STA 0A200h
                      000056 |    
      0269 20 A3 02   000057 |    JSR Delay
      026C 20 A3 02   000058 |    JSR Delay
      026F 20 A3 02   000059 |    JSR Delay
      0272 20 A3 02   000060 |    JSR Delay
      0275 20 A3 02   000061 |    JSR Delay
                      000062 |    
                      000063 |    
      0278 A9 40      000064 |    LDA  #01000000b
      027A 8D 00 A2   000065 |    STA 0A200h
                      000066 |    
      027D 20 A3 02   000067 |    JSR Delay
      0280 20 A3 02   000068 |    JSR Delay
      0283 20 A3 02   000069 |    JSR Delay
      0286 20 A3 02   000070 |    JSR Delay
      0289 20 A3 02   000071 |    JSR Delay
                      000072 |    
                      000073 |    
      028C A9 80      000074 |    LDA  #10000000b
      028E 8D 00 A2   000075 |    STA 0A200h
                      000076 |    
      0291 20 A3 02   000077 |    JSR Delay
      0294 20 A3 02   000078 |    JSR Delay
      0297 20 A3 02   000079 |    JSR Delay
      029A 20 A3 02   000080 |    JSR Delay
      029D 20 A3 02   000081 |    JSR Delay
                      000082 |    
      02A0 4C 00 02   000083 |    JMP main
                      000084 |    
      02A3            000085 |Delay:
      02A3 48         000086 |	pha
      02A4 8A         000087 |	txa
      02A5 48         000088 |	pha
      02A6 98         000089 |	tya
      02A7 48         000090 |	pha
                      000091 |	
      02A8 A9 FF      000092 |	lda #0FFh
                      000093 |	
      02AA            000094 |OutLoop:
      02AA A2 FF      000095 |	ldx #0FFh
                      000096 |
      02AC            000097 |InLoop1:
      02AC A0 FF      000098 |	ldy #0FFh
                      000099 |
      02AE            000100 |InLoop2:
      02AE 88         000101 |	dey
      02AF F0 FD      000102 |	beq InLoop2
                      000103 |
      02B1 CA         000104 |	dex
      02B2 D0 F8      000105 |	bne InLoop1
                      000106 |
      02B4 38         000107 |	sec
      02B5 E9 01      000108 |	sbc #1d
      02B7 D0 F1      000109 |	bne OutLoop
                      000110 |	
                      000111 |;Restore registers from the stack.
      02B9 68         000112 |	pla
      02BA A8         000113 |	tay
      02BB 68         000114 |	pla
      02BC AA         000115 |	tax
      02BD 68         000116 |	pla
                      000117 |
      02BE 60         000118 |	rts
                      000119 |
                      000120 |	end
      
      *** Symbol Table ***
      {INLOOP1=684, OUTLOOP=682, DELAY=675, MAIN=512, INLOOP2=686, =0}
.   %/output



    %output,parent="Problem 1",mpversion="346",preserve="false"
      Test
.   %/output
%/group

%group,name="Problem 2",description="Byte flashing"
========================================================================================================
Problem 2

Write a program that will turn bits 0 1 2 3 on while 
turning bits 4 5 6 7 off, then turn bits 0 1 2 3 off 
and bits 4 5 6 7 on.

%uasm65,title=""
    org 0200h
   
main:
    LDA  #00001111b
    STA 0A200h
    
    JSR Delay
    JSR Delay
    JSR Delay
    JSR Delay
    JSR Delay
    
    
    LDA  #11110000b
    STA 0A200h
    
    JSR Delay
    JSR Delay
    JSR Delay
    JSR Delay
    JSR Delay
    
    JMP main
    
Delay:
	pha
	txa
	pha
	tya
	pha
	
	lda #0FFh
	
OutLoop:
	ldx #0FFh

InLoop1:
	ldy #0FFh

InLoop2:
	dey
	beq InLoop2

	dex
	bne InLoop1

	sec
	sbc #1d
	bne OutLoop
	
;Restore registers from the stack.
	pla
	tay
	pla
	tax
	pla

	rts
	
    end
%/uasm65

    %output,mpversion="346",preserve="false"
      *** Executable Code ***
      
      %s19,description="Execute this fold to send program to U6502 monitor.",preserve="false"
      	S00700005541534DC2
      	S1170200A90F8D00A2202B02202B02202B02202B02202B027E
      	S1170214A9F08D00A2202B02202B02202B02202B02202B0289
      	S11702284C0002488A489848A9FFA2FFA0FF88F0FDCAD0F887
      	S10E023C38E901D0F168A868AA6860E6
      	S9030000FC
      %/s19
      
      *** List File ***
      
      0200            000001 |    org 0200h
                      000002 |   
      0200            000003 |main:
      0200 A9 0F      000004 |    LDA  #00001111b
      0202 8D 00 A2   000005 |    STA 0A200h
                      000006 |    
      0205 20 2B 02   000007 |    JSR Delay
      0208 20 2B 02   000008 |    JSR Delay
      020B 20 2B 02   000009 |    JSR Delay
      020E 20 2B 02   000010 |    JSR Delay
      0211 20 2B 02   000011 |    JSR Delay
                      000012 |    
                      000013 |    
      0214 A9 F0      000014 |    LDA  #11110000b
      0216 8D 00 A2   000015 |    STA 0A200h
                      000016 |    
      0219 20 2B 02   000017 |    JSR Delay
      021C 20 2B 02   000018 |    JSR Delay
      021F 20 2B 02   000019 |    JSR Delay
      0222 20 2B 02   000020 |    JSR Delay
      0225 20 2B 02   000021 |    JSR Delay
                      000022 |    
      0228 4C 00 02   000023 |    JMP main
                      000024 |    
      022B            000025 |Delay:
      022B 48         000026 |	pha
      022C 8A         000027 |	txa
      022D 48         000028 |	pha
      022E 98         000029 |	tya
      022F 48         000030 |	pha
                      000031 |	
      0230 A9 FF      000032 |	lda #0FFh
                      000033 |	
      0232            000034 |OutLoop:
      0232 A2 FF      000035 |	ldx #0FFh
                      000036 |
      0234            000037 |InLoop1:
      0234 A0 FF      000038 |	ldy #0FFh
                      000039 |
      0236            000040 |InLoop2:
      0236 88         000041 |	dey
      0237 F0 FD      000042 |	beq InLoop2
                      000043 |
      0239 CA         000044 |	dex
      023A D0 F8      000045 |	bne InLoop1
                      000046 |
      023C 38         000047 |	sec
      023D E9 01      000048 |	sbc #1d
      023F D0 F1      000049 |	bne OutLoop
                      000050 |	
                      000051 |;Restore registers from the stack.
      0241 68         000052 |	pla
      0242 A8         000053 |	tay
      0243 68         000054 |	pla
      0244 AA         000055 |	tax
      0245 68         000056 |	pla
                      000057 |
      0246 60         000058 |	rts
                      000059 |	
                      000060 |    end
      
      *** Symbol Table ***
      {INLOOP1=564, OUTLOOP=562, DELAY=555, MAIN=512, INLOOP2=566, =0}
.   %/output
%/group

%group,name="Problem 3",description="Odd to Even"
========================================================================================================
Problem 3

Write a program that will turn all even output port bits 
on and all odd output port bits off, then turn all even 
output port bits off and all odd output port bits on.

%uasm65,title=""
    org 0200h
    
main:
    LDA  #10101010b
    STA 0A200h
    
    JSR Delay
    JSR Delay
    JSR Delay
    JSR Delay
    JSR Delay
    
    
    LDA  #01010101b
    STA 0A200h
    
    JSR Delay
    JSR Delay
    JSR Delay
    JSR Delay
    JSR Delay
    
    JMP main
    
Delay:
	pha
	txa
	pha
	tya
	pha
	
	lda #0FFh
	
OutLoop:
	ldx #0FFh

InLoop1:
	ldy #0FFh

InLoop2:
	dey
	beq InLoop2

	dex
	bne InLoop1

	sec
	sbc #1d
	bne OutLoop
	
;Restore registers from the stack.
	pla
	tay
	pla
	tax
	pla

	rts
    
    end
%/uasm65

    %output,mpversion="346",preserve="false"
      *** Executable Code ***
      
      %s19,description="Execute this fold to send program to U6502 monitor.",preserve="false"
      	S00700005541534DC2
      	S1170200A9AA8D00A2202B02202B02202B02202B02202B02E3
      	S1170214A9558D00A2202B02202B02202B02202B02202B0224
      	S11702284C0002488A489848A9FFA2FFA0FF88F0FDCAD0F887
      	S10E023C38E901D0F168A868AA6860E6
      	S9030000FC
      %/s19
      
      *** List File ***
      
      0200            000001 |    org 0200h
                      000002 |    
      0200            000003 |main:
      0200 A9 AA      000004 |    LDA  #10101010b
      0202 8D 00 A2   000005 |    STA 0A200h
                      000006 |    
      0205 20 2B 02   000007 |    JSR Delay
      0208 20 2B 02   000008 |    JSR Delay
      020B 20 2B 02   000009 |    JSR Delay
      020E 20 2B 02   000010 |    JSR Delay
      0211 20 2B 02   000011 |    JSR Delay
                      000012 |    
                      000013 |    
      0214 A9 55      000014 |    LDA  #01010101b
      0216 8D 00 A2   000015 |    STA 0A200h
                      000016 |    
      0219 20 2B 02   000017 |    JSR Delay
      021C 20 2B 02   000018 |    JSR Delay
      021F 20 2B 02   000019 |    JSR Delay
      0222 20 2B 02   000020 |    JSR Delay
      0225 20 2B 02   000021 |    JSR Delay
                      000022 |    
      0228 4C 00 02   000023 |    JMP main
                      000024 |    
      022B            000025 |Delay:
      022B 48         000026 |	pha
      022C 8A         000027 |	txa
      022D 48         000028 |	pha
      022E 98         000029 |	tya
      022F 48         000030 |	pha
                      000031 |	
      0230 A9 FF      000032 |	lda #0FFh
                      000033 |	
      0232            000034 |OutLoop:
      0232 A2 FF      000035 |	ldx #0FFh
                      000036 |
      0234            000037 |InLoop1:
      0234 A0 FF      000038 |	ldy #0FFh
                      000039 |
      0236            000040 |InLoop2:
      0236 88         000041 |	dey
      0237 F0 FD      000042 |	beq InLoop2
                      000043 |
      0239 CA         000044 |	dex
      023A D0 F8      000045 |	bne InLoop1
                      000046 |
      023C 38         000047 |	sec
      023D E9 01      000048 |	sbc #1d
      023F D0 F1      000049 |	bne OutLoop
                      000050 |	
                      000051 |;Restore registers from the stack.
      0241 68         000052 |	pla
      0242 A8         000053 |	tay
      0243 68         000054 |	pla
      0244 AA         000055 |	tax
      0245 68         000056 |	pla
                      000057 |
      0246 60         000058 |	rts
                      000059 |    
                      000060 |    end
      
      *** Symbol Table ***
      {INLOOP1=564, OUTLOOP=562, DELAY=555, MAIN=512, INLOOP2=566, =0}
.   %/output
%/group

%group,name="Problem 4",description="Bit back and forth"
========================================================================================================
Problem 4

Write a program that will turn bit 0 of your output 
port on then send this bit across the port to bit 7 
then back to bit 0.

%uasm65,title=""
	org 0200h
	
main:
    LDA  #00000001b
    STA 0A200h
    
    JSR Delay
    JSR Delay
    JSR Delay
    JSR Delay
    JSR Delay
    
    
    LDA  #00000010b
    STA 0A200h
    
    JSR Delay
    JSR Delay
    JSR Delay
    JSR Delay
    JSR Delay
    
    
    LDA  #00000100b
    STA 0A200h
    
    JSR Delay
    JSR Delay
    JSR Delay
    JSR Delay
    JSR Delay
    
    
    LDA  #00001000b
    STA 0A200h
    
    JSR Delay
    JSR Delay
    JSR Delay
    JSR Delay
    JSR Delay
    
    
    LDA  #00010000b
    STA 0A200h
    
    JSR Delay
    JSR Delay
    JSR Delay
    JSR Delay
    JSR Delay
    
    
    LDA  #00100000b
    STA 0A200h
    
    JSR Delay
    JSR Delay
    JSR Delay
    JSR Delay
    JSR Delay
    
    
    LDA  #01000000b
    STA 0A200h
    
    JSR Delay
    JSR Delay
    JSR Delay
    JSR Delay
    JSR Delay
    
    
    LDA  #10000000b
    STA 0A200h
    
    JSR Delay
    JSR Delay
    JSR Delay
    JSR Delay
    JSR Delay
    
    
    LDA  #01000000b
    STA 0A200h
    
    JSR Delay
    JSR Delay
    JSR Delay
    JSR Delay
    JSR Delay
    
    
    LDA  #00100000b
    STA 0A200h
    
    JSR Delay
    JSR Delay
    JSR Delay
    JSR Delay
    JSR Delay
    
    
    LDA  #00010000b
    STA 0A200h
    
    JSR Delay
    JSR Delay
    JSR Delay
    JSR Delay
    JSR Delay
    
    
    LDA  #00001000b
    STA 0A200h
    
    JSR Delay
    JSR Delay
    JSR Delay
    JSR Delay
    JSR Delay
    
    
    LDA  #00000100b
    STA 0A200h
    
    JSR Delay
    JSR Delay
    JSR Delay
    JSR Delay
    JSR Delay
    
    
    LDA  #00000010b
    STA 0A200h
    
    JSR Delay
    JSR Delay
    JSR Delay
    JSR Delay
    JSR Delay
    
    JMP main
    
Delay:
	pha
	txa
	pha
	tya
	pha
	
	lda #0FFh
	
OutLoop:
	ldx #030h

InLoop1:
	ldy #0FFh

InLoop2:
	dey
	beq InLoop2

	dex
	bne InLoop1

	sec
	sbc #1d
	bne OutLoop
	
;Restore registers from the stack.
	pla
	tay
	pla
	tax
	pla

	rts

	end

%/uasm65

    %output,mpversion="346",preserve="false"
      *** Executable Code ***
      
      %s19,description="Execute this fold to send program to U6502 monitor.",preserve="false"
      	S00700005541534DC2
      	S1170200A9018D00A2201B03201B03201B03201B03201B03D7
      	S1170214A9028D00A2201B03201B03201B03201B03201B03C2
      	S1170228A9048D00A2201B03201B03201B03201B03201B03AC
      	S117023CA9088D00A2201B03201B03201B03201B03201B0394
      	S1170250A9108D00A2201B03201B03201B03201B03201B0378
      	S1170264A9208D00A2201B03201B03201B03201B03201B0354
      	S1170278A9408D00A2201B03201B03201B03201B03201B0320
      	S117028CA9808D00A2201B03201B03201B03201B03201B03CC
      	S11702A0A9408D00A2201B03201B03201B03201B03201B03F8
      	S11702B4A9208D00A2201B03201B03201B03201B03201B0304
      	S11702C8A9108D00A2201B03201B03201B03201B03201B0300
      	S11702DCA9088D00A2201B03201B03201B03201B03201B03F4
      	S11702F0A9048D00A2201B03201B03201B03201B03201B03E4
      	S1170304A9028D00A2201B03201B03201B03201B03201B03D1
      	S11703184C0002488A489848A9FFA230A0FF88F0FDCAD0F865
      	S10E032C38E901D0F168A868AA6860F5
      	S9030000FC
      %/s19
      
      *** List File ***
      
      0200            000001 |	org 0200h
                      000002 |	
      0200            000003 |main:
      0200 A9 01      000004 |    LDA  #00000001b
      0202 8D 00 A2   000005 |    STA 0A200h
                      000006 |    
      0205 20 1B 03   000007 |    JSR Delay
      0208 20 1B 03   000008 |    JSR Delay
      020B 20 1B 03   000009 |    JSR Delay
      020E 20 1B 03   000010 |    JSR Delay
      0211 20 1B 03   000011 |    JSR Delay
                      000012 |    
                      000013 |    
      0214 A9 02      000014 |    LDA  #00000010b
      0216 8D 00 A2   000015 |    STA 0A200h
                      000016 |    
      0219 20 1B 03   000017 |    JSR Delay
      021C 20 1B 03   000018 |    JSR Delay
      021F 20 1B 03   000019 |    JSR Delay
      0222 20 1B 03   000020 |    JSR Delay
      0225 20 1B 03   000021 |    JSR Delay
                      000022 |    
                      000023 |    
      0228 A9 04      000024 |    LDA  #00000100b
      022A 8D 00 A2   000025 |    STA 0A200h
                      000026 |    
      022D 20 1B 03   000027 |    JSR Delay
      0230 20 1B 03   000028 |    JSR Delay
      0233 20 1B 03   000029 |    JSR Delay
      0236 20 1B 03   000030 |    JSR Delay
      0239 20 1B 03   000031 |    JSR Delay
                      000032 |    
                      000033 |    
      023C A9 08      000034 |    LDA  #00001000b
      023E 8D 00 A2   000035 |    STA 0A200h
                      000036 |    
      0241 20 1B 03   000037 |    JSR Delay
      0244 20 1B 03   000038 |    JSR Delay
      0247 20 1B 03   000039 |    JSR Delay
      024A 20 1B 03   000040 |    JSR Delay
      024D 20 1B 03   000041 |    JSR Delay
                      000042 |    
                      000043 |    
      0250 A9 10      000044 |    LDA  #00010000b
      0252 8D 00 A2   000045 |    STA 0A200h
                      000046 |    
      0255 20 1B 03   000047 |    JSR Delay
      0258 20 1B 03   000048 |    JSR Delay
      025B 20 1B 03   000049 |    JSR Delay
      025E 20 1B 03   000050 |    JSR Delay
      0261 20 1B 03   000051 |    JSR Delay
                      000052 |    
                      000053 |    
      0264 A9 20      000054 |    LDA  #00100000b
      0266 8D 00 A2   000055 |    STA 0A200h
                      000056 |    
      0269 20 1B 03   000057 |    JSR Delay
      026C 20 1B 03   000058 |    JSR Delay
      026F 20 1B 03   000059 |    JSR Delay
      0272 20 1B 03   000060 |    JSR Delay
      0275 20 1B 03   000061 |    JSR Delay
                      000062 |    
                      000063 |    
      0278 A9 40      000064 |    LDA  #01000000b
      027A 8D 00 A2   000065 |    STA 0A200h
                      000066 |    
      027D 20 1B 03   000067 |    JSR Delay
      0280 20 1B 03   000068 |    JSR Delay
      0283 20 1B 03   000069 |    JSR Delay
      0286 20 1B 03   000070 |    JSR Delay
      0289 20 1B 03   000071 |    JSR Delay
                      000072 |    
                      000073 |    
      028C A9 80      000074 |    LDA  #10000000b
      028E 8D 00 A2   000075 |    STA 0A200h
                      000076 |    
      0291 20 1B 03   000077 |    JSR Delay
      0294 20 1B 03   000078 |    JSR Delay
      0297 20 1B 03   000079 |    JSR Delay
      029A 20 1B 03   000080 |    JSR Delay
      029D 20 1B 03   000081 |    JSR Delay
                      000082 |    
                      000083 |    
      02A0 A9 40      000084 |    LDA  #01000000b
      02A2 8D 00 A2   000085 |    STA 0A200h
                      000086 |    
      02A5 20 1B 03   000087 |    JSR Delay
      02A8 20 1B 03   000088 |    JSR Delay
      02AB 20 1B 03   000089 |    JSR Delay
      02AE 20 1B 03   000090 |    JSR Delay
      02B1 20 1B 03   000091 |    JSR Delay
                      000092 |    
                      000093 |    
      02B4 A9 20      000094 |    LDA  #00100000b
      02B6 8D 00 A2   000095 |    STA 0A200h
                      000096 |    
      02B9 20 1B 03   000097 |    JSR Delay
      02BC 20 1B 03   000098 |    JSR Delay
      02BF 20 1B 03   000099 |    JSR Delay
      02C2 20 1B 03   000100 |    JSR Delay
      02C5 20 1B 03   000101 |    JSR Delay
                      000102 |    
                      000103 |    
      02C8 A9 10      000104 |    LDA  #00010000b
      02CA 8D 00 A2   000105 |    STA 0A200h
                      000106 |    
      02CD 20 1B 03   000107 |    JSR Delay
      02D0 20 1B 03   000108 |    JSR Delay
      02D3 20 1B 03   000109 |    JSR Delay
      02D6 20 1B 03   000110 |    JSR Delay
      02D9 20 1B 03   000111 |    JSR Delay
                      000112 |    
                      000113 |    
      02DC A9 08      000114 |    LDA  #00001000b
      02DE 8D 00 A2   000115 |    STA 0A200h
                      000116 |    
      02E1 20 1B 03   000117 |    JSR Delay
      02E4 20 1B 03   000118 |    JSR Delay
      02E7 20 1B 03   000119 |    JSR Delay
      02EA 20 1B 03   000120 |    JSR Delay
      02ED 20 1B 03   000121 |    JSR Delay
                      000122 |    
                      000123 |    
      02F0 A9 04      000124 |    LDA  #00000100b
      02F2 8D 00 A2   000125 |    STA 0A200h
                      000126 |    
      02F5 20 1B 03   000127 |    JSR Delay
      02F8 20 1B 03   000128 |    JSR Delay
      02FB 20 1B 03   000129 |    JSR Delay
      02FE 20 1B 03   000130 |    JSR Delay
      0301 20 1B 03   000131 |    JSR Delay
                      000132 |    
                      000133 |    
      0304 A9 02      000134 |    LDA  #00000010b
      0306 8D 00 A2   000135 |    STA 0A200h
                      000136 |    
      0309 20 1B 03   000137 |    JSR Delay
      030C 20 1B 03   000138 |    JSR Delay
      030F 20 1B 03   000139 |    JSR Delay
      0312 20 1B 03   000140 |    JSR Delay
      0315 20 1B 03   000141 |    JSR Delay
                      000142 |    
      0318 4C 00 02   000143 |    JMP main
                      000144 |    
      031B            000145 |Delay:
      031B 48         000146 |	pha
      031C 8A         000147 |	txa
      031D 48         000148 |	pha
      031E 98         000149 |	tya
      031F 48         000150 |	pha
                      000151 |	
      0320 A9 FF      000152 |	lda #0FFh
                      000153 |	
      0322            000154 |OutLoop:
      0322 A2 30      000155 |	ldx #030h
                      000156 |
      0324            000157 |InLoop1:
      0324 A0 FF      000158 |	ldy #0FFh
                      000159 |
      0326            000160 |InLoop2:
      0326 88         000161 |	dey
      0327 F0 FD      000162 |	beq InLoop2
                      000163 |
      0329 CA         000164 |	dex
      032A D0 F8      000165 |	bne InLoop1
                      000166 |
      032C 38         000167 |	sec
      032D E9 01      000168 |	sbc #1d
      032F D0 F1      000169 |	bne OutLoop
                      000170 |	
                      000171 |;Restore registers from the stack.
      0331 68         000172 |	pla
      0332 A8         000173 |	tay
      0333 68         000174 |	pla
      0334 AA         000175 |	tax
      0335 68         000176 |	pla
                      000177 |
      0336 60         000178 |	rts
                      000179 |
                      000180 |	end
      
      *** Symbol Table ***
      {INLOOP1=804, OUTLOOP=802, DELAY=795, MAIN=512, INLOOP2=806, =0}
.   %/output

    %output,parent="Problem 6",mpversion="346",preserve="false"
      Test
.   %/output
%/group

%group,name="Problem 5",description="Out to in"
========================================================================================================
Problem 5

Write a program that will turn bits 0 and 7 in the 
output port on, move these bits to bit positions 
3 and 4 then back out again to bit positions 0 
and 7. Only 2 LEDs should be on at a time.

%uasm65,title=""
    org 0200h
    
main:
    LDA  #10000001b
    STA 0A200h
    
    JSR Delay
    JSR Delay
    JSR Delay
    JSR Delay
    JSR Delay
    
    
    LDA  #00011000b
    STA 0A200h
    
    JSR Delay
    JSR Delay
    JSR Delay
    JSR Delay
    JSR Delay
    
    JMP main
    
Delay:
	pha
	txa
	pha
	tya
	pha
	
	lda #0FFh
	
OutLoop:
	ldx #0FFh

InLoop1:
	ldy #0FFh

InLoop2:
	dey
	beq InLoop2

	dex
	bne InLoop1

	sec
	sbc #1d
	bne OutLoop
	
;Restore registers from the stack.
	pla
	tay
	pla
	tax
	pla

	rts
    
    end
%/uasm65

    %output,mpversion="346",preserve="false"
      *** Executable Code ***
      
      %s19,description="Execute this fold to send program to U6502 monitor.",preserve="false"
      	S00700005541534DC2
      	S1170200A9818D00A2202B02202B02202B02202B02202B020C
      	S1170214A9188D00A2202B02202B02202B02202B02202B0261
      	S11702284C0002488A489848A9FFA2FFA0FF88F0FDCAD0F887
      	S10E023C38E901D0F168A868AA6860E6
      	S9030000FC
      %/s19
      
      *** List File ***
      
      0200            000001 |    org 0200h
                      000002 |    
      0200            000003 |main:
      0200 A9 81      000004 |    LDA  #10000001b
      0202 8D 00 A2   000005 |    STA 0A200h
                      000006 |    
      0205 20 2B 02   000007 |    JSR Delay
      0208 20 2B 02   000008 |    JSR Delay
      020B 20 2B 02   000009 |    JSR Delay
      020E 20 2B 02   000010 |    JSR Delay
      0211 20 2B 02   000011 |    JSR Delay
                      000012 |    
                      000013 |    
      0214 A9 18      000014 |    LDA  #00011000b
      0216 8D 00 A2   000015 |    STA 0A200h
                      000016 |    
      0219 20 2B 02   000017 |    JSR Delay
      021C 20 2B 02   000018 |    JSR Delay
      021F 20 2B 02   000019 |    JSR Delay
      0222 20 2B 02   000020 |    JSR Delay
      0225 20 2B 02   000021 |    JSR Delay
                      000022 |    
      0228 4C 00 02   000023 |    JMP main
                      000024 |    
      022B            000025 |Delay:
      022B 48         000026 |	pha
      022C 8A         000027 |	txa
      022D 48         000028 |	pha
      022E 98         000029 |	tya
      022F 48         000030 |	pha
                      000031 |	
      0230 A9 FF      000032 |	lda #0FFh
                      000033 |	
      0232            000034 |OutLoop:
      0232 A2 FF      000035 |	ldx #0FFh
                      000036 |
      0234            000037 |InLoop1:
      0234 A0 FF      000038 |	ldy #0FFh
                      000039 |
      0236            000040 |InLoop2:
      0236 88         000041 |	dey
      0237 F0 FD      000042 |	beq InLoop2
                      000043 |
      0239 CA         000044 |	dex
      023A D0 F8      000045 |	bne InLoop1
                      000046 |
      023C 38         000047 |	sec
      023D E9 01      000048 |	sbc #1d
      023F D0 F1      000049 |	bne OutLoop
                      000050 |	
                      000051 |;Restore registers from the stack.
      0241 68         000052 |	pla
      0242 A8         000053 |	tay
      0243 68         000054 |	pla
      0244 AA         000055 |	tax
      0245 68         000056 |	pla
                      000057 |
      0246 60         000058 |	rts
                      000059 |    
                      000060 |    end
      
      *** Symbol Table ***
      {INLOOP1=564, OUTLOOP=562, DELAY=555, MAIN=512, INLOOP2=566, =0}
.   %/output
%/group

%group,name="Problem 6",description="Increasing 0x00 to 0xFF"
========================================================================================================
Problem 6

Write a program that will make your output port 
count from 0h to 0FFh then start over again at 0.

%uasm65,title=""
    org 0200h
    
    LDX #0h
    
main:
    JSR Delay
    JSR Delay
    
    STX 0a200h
    INX
    
    CPX #0FFh
    BNE main
    
    LDX #0h
    jmp main
    
Delay:
	pha
	txa
	pha
	tya
	pha
	
	lda #0FFh
	
OutLoop:
	ldx #0FFh

InLoop1:
	ldy #0FFh

InLoop2:
	dey
	beq InLoop2

	dex
	bne InLoop1

	sec
	sbc #1d
	bne OutLoop
	
;Restore registers from the stack.
	pla
	tay
	pla
	tax
	pla

	rts
    
    end
%/uasm65

    %output,mpversion="346",preserve="false"
      *** Executable Code ***
      
      %s19,description="Execute this fold to send program to U6502 monitor.",preserve="false"
      	S00700005541534DC2
      	S1170200A2002015022015028E00A2E8E0FFD0F2A2004C022D
      	S117021402488A489848A9FFA2FFA0FF88F0FDCAD0F838E9C6
      	S10C022801D0F168A868AA68601D
      	S9030000FC
      %/s19
      
      *** List File ***
      
      0200            000001 |    org 0200h
                      000002 |    
      0200 A2 00      000003 |    LDX #0h
                      000004 |    
      0202            000005 |main:
      0202 20 15 02   000006 |    JSR Delay
      0205 20 15 02   000007 |    JSR Delay
                      000008 |    
      0208 8E 00 A2   000009 |    STX 0a200h
      020B E8         000010 |    INX
                      000011 |    
      020C E0 FF      000012 |    CPX #0FFh
      020E D0 F2      000013 |    BNE main
                      000014 |    
      0210 A2 00      000015 |    LDX #0h
      0212 4C 02 02   000016 |    jmp main
                      000017 |    
      0215            000018 |Delay:
      0215 48         000019 |	pha
      0216 8A         000020 |	txa
      0217 48         000021 |	pha
      0218 98         000022 |	tya
      0219 48         000023 |	pha
                      000024 |	
      021A A9 FF      000025 |	lda #0FFh
                      000026 |	
      021C            000027 |OutLoop:
      021C A2 FF      000028 |	ldx #0FFh
                      000029 |
      021E            000030 |InLoop1:
      021E A0 FF      000031 |	ldy #0FFh
                      000032 |
      0220            000033 |InLoop2:
      0220 88         000034 |	dey
      0221 F0 FD      000035 |	beq InLoop2
                      000036 |
      0223 CA         000037 |	dex
      0224 D0 F8      000038 |	bne InLoop1
                      000039 |
      0226 38         000040 |	sec
      0227 E9 01      000041 |	sbc #1d
      0229 D0 F1      000042 |	bne OutLoop
                      000043 |	
                      000044 |;Restore registers from the stack.
      022B 68         000045 |	pla
      022C A8         000046 |	tay
      022D 68         000047 |	pla
      022E AA         000048 |	tax
      022F 68         000049 |	pla
                      000050 |
      0230 60         000051 |	rts
                      000052 |    
                      000053 |    end
      
      *** Symbol Table ***
      {INLOOP1=542, OUTLOOP=540, DELAY=533, MAIN=514, INLOOP2=544, =0}
.   %/output
%/group

%group,name="Problem 7",description="20Hz Square Wave"
========================================================================================================
Problem 7

Write a program that will output a 20 Hz square wave 
on PA0. Verify this frequency with an oscilloscope.

%uasm65,title=""
    org 0200h
    
    LDA #10b
    
main:
    LDA  #00000001b
    STA 0A200h
    
    JSR Delay 
    JSR Delay
    
    
    LDA  #00000000b
    STA 0A200h
    
    JSR Delay
    JSR Delay
    
    JMP main
  
; 100ms delay
Delay:
	pha
	txa
	pha
	tya
	pha
	
	lda #0D7h
	
OutLoop:
	ldx #0FFh

InLoop1:
	ldy #0FFh

InLoop2:
	dey
	beq InLoop2

	dex
	bne InLoop1

	sec
	sbc #1d
	bne OutLoop
	
;Restore registers from the stack.
	pla
	tay
	pla
	tax
	pla

	rts
    
    end
%/uasm65

    %output,mpversion="346",preserve="false"
      *** Executable Code ***
      
      %s19,description="Execute this fold to send program to U6502 monitor.",preserve="false"
      	S00700005541534DC2
      	S1170200A902A9018D00A2201B02201B02A9008D00A2201BD5
      	S117021402201B024C0202488A489848A9D7A2FFA0FF88F011
      	S1120228FDCAD0F838E901D0F168A868AA686067
      	S9030000FC
      %/s19
      
      *** List File ***
      
      0200            000001 |    org 0200h
                      000002 |    
      0200 A9 02      000003 |    LDA #10b
                      000004 |    
      0202            000005 |main:
      0202 A9 01      000006 |    LDA  #00000001b
      0204 8D 00 A2   000007 |    STA 0A200h
                      000008 |    
      0207 20 1B 02   000009 |    JSR Delay 
      020A 20 1B 02   000010 |    JSR Delay
                      000011 |    
                      000012 |    
      020D A9 00      000013 |    LDA  #00000000b
      020F 8D 00 A2   000014 |    STA 0A200h
                      000015 |    
      0212 20 1B 02   000016 |    JSR Delay
      0215 20 1B 02   000017 |    JSR Delay
                      000018 |    
      0218 4C 02 02   000019 |    JMP main
                      000020 |  
                      000021 |; 100ms delay
      021B            000022 |Delay:
      021B 48         000023 |	pha
      021C 8A         000024 |	txa
      021D 48         000025 |	pha
      021E 98         000026 |	tya
      021F 48         000027 |	pha
                      000028 |	
      0220 A9 D7      000029 |	lda #0D7h
                      000030 |	
      0222            000031 |OutLoop:
      0222 A2 FF      000032 |	ldx #0FFh
                      000033 |
      0224            000034 |InLoop1:
      0224 A0 FF      000035 |	ldy #0FFh
                      000036 |
      0226            000037 |InLoop2:
      0226 88         000038 |	dey
      0227 F0 FD      000039 |	beq InLoop2
                      000040 |
      0229 CA         000041 |	dex
      022A D0 F8      000042 |	bne InLoop1
                      000043 |
      022C 38         000044 |	sec
      022D E9 01      000045 |	sbc #1d
      022F D0 F1      000046 |	bne OutLoop
                      000047 |	
                      000048 |;Restore registers from the stack.
      0231 68         000049 |	pla
      0232 A8         000050 |	tay
      0233 68         000051 |	pla
      0234 AA         000052 |	tax
      0235 68         000053 |	pla
                      000054 |
      0236 60         000055 |	rts
                      000056 |    
                      000057 |    end
      
      *** Symbol Table ***
      {INLOOP1=548, OUTLOOP=546, DELAY=539, MAIN=514, INLOOP2=550, =0}
.   %/output
%/group
